---
openapi: 3.0.0
info:
  title: "Aufgabe: Hey, Mr. Postman"
  version: "1.0"
  description: "Dieser Webservice dient dazu, die typischen HTTP-Aufrufe bei  Verwendung\
    \ eines REST-Webservices mit einem Werkzeug wie Postman (https://www.postman.com/)\
    \  auszuprobieren. Hierfür wird eine simple API zur Verwaltung von Songs angeboten."
  contact:
    name: Dennis Schulmeister-Zimolong
    url: https://www.wpvs.de
    email: dhbw@windows3.de
  license:
    name: CC-BY-4.0
    url: https://creativecommons.org/licenses/by/4.0/deed.de
servers:
- url: http://localhost:3000
paths:
  /:
    get:
      tags:
      - Index
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
                x-content-type: application/json
          description: OK
      summary: Wurzeladresse des Webservices
      description: Liefert eine HATEOAS-Übersicht aller collections
  /song:
    get:
      tags:
      - Song
      parameters:
      - name: search
        description: Suchbegriff (alle anderen Parameter werden dann ignoriert)
        schema:
          type: string
        in: query
        required: false
      - name: artist
        description: Künstler (exakte Übereinstimmung)
        schema:
          type: string
        in: query
        required: false
      - name: name
        description: Songname (exakte Übereinstimmung)
        schema:
          type: string
        in: query
        required: false
      - name: releaseYear
        description: Jahr der Veröffentlichung (exakte Übereinstimmung)
        schema:
          type: integer
        in: query
        required: false
      - name: songwriters
        description: Songschreiber (exakte Übereinstimmung)
        schema:
          type: string
        in: query
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
                x-content-type: application/json
          description: OK
      summary: Song-Collection
      description: Eine Liste von Songs
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
            examples:
              Song anlegen:
                value:
                  artist: Bruce Springsteen
                  name: If I Was the Priest
                  release_year: 2020
                  songwriters: Bruce Springsteen
        required: true
      tags:
      - Song
      responses:
        "201":
          headers:
            Location:
              schema:
                type: string
              examples:
                URL für neuen Song:
                  value: http://localhost:3000/song/9651efba621795ef5fe45231a
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
              examples:
                Angelegter Song:
                  value:
                    _id: 9651efba621795ef5fe45231a
                    artist: Bruce Springsteen
                    name: If I Was the Priest
                    release_year: 2020
                    songwriters: Bruce Springsteen
          description: Angelegter Song inklusive ID.
      summary: Song hinzufügen
      description: Legt einen neuen Song an.
  /song/{id}:
    get:
      tags:
      - Song
      parameters:
      - style: simple
        explode: false
        name: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: OK
        "404":
          description: Not Found
      summary: Song lesen
      description: Liest einen einzelnen Song vom Server.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      tags:
      - Song
      parameters:
      - style: simple
        explode: false
        name: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: OK
        "404":
          description: Not Found
      summary: Song ändern
      description: "Überschreibt einen vorhandenen Song auf dem Server. Bis auf die\
        \ ID können alle Felder geändert werden. Der Versuch, die ID zu ändern, wird\
        \ vom Server stillschweigend ignoriert."
    delete:
      tags:
      - Song
      parameters:
      - style: simple
        explode: false
        name: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      summary: Song löschen
      description: Löscht einen Song auf dem Server.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      tags:
      - Song
      parameters:
      - style: simple
        explode: false
        name: id
        schema:
          type: string
        in: path
        required: true
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Einzelne Songfelder ändern
      description: "Ändert einzelne Felder eines vorhandenen Songs. Zulässig sind\
        \ alle Felder bis auf die ID, da diese nachträglich nicht mehr verändert werden\
        \ darf."
components:
  schemas:
    HATEOAS_Collection:
      title: HATEOAS-Links einer Collection
      type: object
      properties:
        _name:
          type: string
        query:
          $ref: '#/components/schemas/HATEOAS_Link'
        create:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Resource:
      title: HATEOAS-Links einer Resource
      type: object
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Link'
        update:
          $ref: '#/components/schemas/HATEOAS_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Link:
      title: HATEOAS-Link
      type: object
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
    Song:
      title: Song
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Resource'
        _id:
          type: string
        artist:
          type: string
        name:
          type: string
        release_year:
          type: integer
        songwriters:
          type: string
      example:
        _id: 621ff9a936997df5baba746e
        artist: Elton John
        name: Circle of Life
        release_year: 1994
        songwriters: Tim Rice
tags:
- name: Index
- name: Song
